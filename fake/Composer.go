// This file was generated by counterfeiter
package fake

import (
	"io"
	"sync"

	"github.com/phogolabs/parcel"
)

type Composer struct {
	WriteToStub        func(w io.Writer, bundle *parcel.Bundle) error
	writeToMutex       sync.RWMutex
	writeToArgsForCall []struct {
		w      io.Writer
		bundle *parcel.Bundle
	}
	writeToReturns struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *Composer) WriteTo(w io.Writer, bundle *parcel.Bundle) error {
	fake.writeToMutex.Lock()
	fake.writeToArgsForCall = append(fake.writeToArgsForCall, struct {
		w      io.Writer
		bundle *parcel.Bundle
	}{w, bundle})
	fake.recordInvocation("WriteTo", []interface{}{w, bundle})
	fake.writeToMutex.Unlock()
	if fake.WriteToStub != nil {
		return fake.WriteToStub(w, bundle)
	}
	return fake.writeToReturns.result1
}

func (fake *Composer) WriteToCallCount() int {
	fake.writeToMutex.RLock()
	defer fake.writeToMutex.RUnlock()
	return len(fake.writeToArgsForCall)
}

func (fake *Composer) WriteToArgsForCall(i int) (io.Writer, *parcel.Bundle) {
	fake.writeToMutex.RLock()
	defer fake.writeToMutex.RUnlock()
	return fake.writeToArgsForCall[i].w, fake.writeToArgsForCall[i].bundle
}

func (fake *Composer) WriteToReturns(result1 error) {
	fake.WriteToStub = nil
	fake.writeToReturns = struct {
		result1 error
	}{result1}
}

func (fake *Composer) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.writeToMutex.RLock()
	defer fake.writeToMutex.RUnlock()
	return fake.invocations
}

func (fake *Composer) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ parcel.Composer = new(Composer)
